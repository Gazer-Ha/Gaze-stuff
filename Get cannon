--Please Patch This too op

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Save initial position
local initialCFrame = hrp.CFrame

local function isModelUnanchored(model)
	for _, part in pairs(model:GetDescendants()) do
		if part:IsA("BasePart") and not part.Anchored then
			return true
		end
	end
	return false
end

-- Tween far away
local goal = { CFrame = CFrame.new(-9, 3, -50000) }
local tweenInfo = TweenInfo.new(20, Enum.EasingStyle.Linear)
local tween = TweenService:Create(hrp, tweenInfo, goal)
tween:Play()

-- Monitor for Cannon
-- Monitor for Cannon
local connection
connection = RunService.RenderStepped:Connect(function()
	local cannon = workspace:FindFirstChild("Cannon", true)
	if cannon and cannon:IsA("Model") then
		-- Wait 1 second to allow it to fully load or unanchor
		task.wait(1)
		
		if isModelUnanchored(cannon) then
			local seat = cannon:FindFirstChildWhichIsA("VehicleSeat", true)
			if seat and not seat.Occupant then
				tween:Cancel()
				connection:Disconnect()

				if hrp and humanoid then
					hrp.CFrame = seat.CFrame
					seat:Sit(humanoid)

					task.delay(1, function()
						-- Unsit
						if humanoid.Sit then
							humanoid.Sit = false
							humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						end

						task.delay(1, function()
							-- Sit again
							seat:Sit(humanoid)

							task.delay(1, function()
								if hrp then
									hrp.CFrame = initialCFrame

									-- Disable jumping
									humanoid.JumpPower = 0
									humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
								end
							end)
						end)
					end)
				end
			end
		end
	end
end)
